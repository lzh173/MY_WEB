// 文件类型对应的图标
const fileIcons = {
  'css': 'bi-filetype-css',
  'js': 'bi-filetype-js',
  'json': 'bi-filetype-json',
  'html': 'bi-folder2',
  'jpg': 'bi-file-image',
  'jpeg': 'bi-file-image',
  'png': 'bi-file-image',
  'gif': 'bi-file-image',
  'pdf': 'bi-filetype-pdf',
  'doc': 'bi-file-word',
  'docx': 'bi-file-word',
  'xls': 'bi-file-excel',
  'xlsx': 'bi-file-excel',
  'ppt': 'bi-file-ppt',
  'pptx': 'bi-file-ppt',
  'zip': 'bi-file-zip',
  'rar': 'bi-file-zip',
  'mp3': 'bi-file-music',
  'mp4': 'bi-file-play',
  'default': 'bi-file-earmark'
};

// 初始化文件列表
function initFileList() {
  const fileListElement = document.getElementById('fileList');
  
  files.forEach(file => {
    const fileEntry = document.createElement('a');
    fileEntry.href = file.path;
    fileEntry.className = 'file-entry';
    
    // 文件名称部分
    const fileNameDiv = document.createElement('div');
    fileNameDiv.className = 'file-name';
    
    const fileIcon = document.createElement('i');
    fileIcon.className = `bi ${fileIcons[file.type] || fileIcons['default']}`;
    
    const fileName = document.createElement('span');
    fileName.textContent = file.name;
    
    fileNameDiv.appendChild(fileIcon);
    fileNameDiv.appendChild(fileName);
    
    // 文件信息部分
    const fileInfoDiv = document.createElement('div');
    fileInfoDiv.className = 'file-info';
    fileInfoDiv.id = `size-${file.name.replace('.', '-')}`;
    
    // 如果是html文件，不计算大小
    if (file.type === 'html') {
      fileInfoDiv.textContent = '文件夹'; // 或者可以显示"目录"等字样
    } else {
      fileInfoDiv.textContent = '计算大小中...';
      // 获取文件大小（非html文件）
      getFileSize(file.path, `size-${file.name.replace('.', '-')}`);
    }
    
    fileEntry.appendChild(fileNameDiv);
    fileEntry.appendChild(fileInfoDiv);
    
    fileListElement.appendChild(fileEntry);
  });
}

// 获取文件大小（保持不变）eee
function getFileSize(url, elementId) {
  fetch(url, { method: 'HEAD' })
    .then(response => {
      if (!response.ok) throw new Error('无法获取文件信息');
      const size = response.headers.get('Content-Length');
      if (size) {
        document.getElementById(elementId).textContent = formatFileSize(size);
      } else {
        document.getElementById(elementId).textContent = '大小未知';
      }
    })
    .catch(error => {
      console.error('获取文件大小失败:', error);
      document.getElementById(elementId).textContent = '无法获取大小';
    });
}

// 格式化文件大小（保持不变）
function formatFileSize(bytes) {
  bytes = parseInt(bytes, 10);
  if (isNaN(bytes)) return '0 Bytes';
  if (bytes === 0) return '0 Bytes';
  
  const k = 1024;
  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// 获取一言（保持不变）
fetch('https://v1.hitokoto.cn')
  .then(response => response.json())
  .then(data => {
    const hitokoto = document.querySelector('#hitokoto_text');
    hitokoto.href = `https://hitokoto.cn/?uuid=${data.uuid}`;
    hitokoto.innerText = data.hitokoto;
  })
  .catch(console.error);

// 页面加载完成后初始化文件列表（保持不变）
window.addEventListener('load', initFileList);